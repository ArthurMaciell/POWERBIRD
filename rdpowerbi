import requests
import pandas as pd
from datetime import datetime, timedelta, timezone

# === CREDENCIAIS ===
client_id = "c601b04b-76d5-486f-a0d6-644c8b19b069"
client_secret = "cee29c91bca5478c81ae54f56a464312"
access_token = "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpc3MiOiJodHRwczovL2FwaS5yZC5zZXJ2aWNlcyIsInN1YiI6IjFCMGt1NlhwbjRZTmN0UklNdGs1VDdRT25EdUpkaHltbXdtT2NJYUpQeWNAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vYXBwLnJkc3RhdGlvbi5jb20uYnIvYXBpL3YyLyIsImFwcF9uYW1lIjoiYXV0b21hY2FvcmQiLCJleHAiOjE3NDY1NjM3NzQsImlhdCI6MTc0NjQ3NzM3NCwic2NvcGUiOiIifQ.hE_JdMDJe0MikCk3zTtrykpL4R3g17YTs_o0cn_aVx3KPnkpFS7iIQJk5BvECmTVk8VXUPsifsmGswh7DEoJYtcT0MvfoIsyzXRPVLv4ctLlGiS7wYiT5yT8FZ5E1JnZTbUtX7L3GXVqoO3arV4OErQxyrALxvA_DgB-FcW0efdrFRNJcvnd0GJV8OTnJeVBJh0nOZUdbU87jyJyIHv74kcdmzTzGaMc1Xc5JG-eu8L2ZJS50093WdY11FLLGTbq21hVTfycrcTZUOwLLOJQbHiZwjU5BoWlsjCFM6EwgkGROzdZK5Rou5gKVhOeMgRzQzKZzFal_YsevYBMwNp_-g"
refresh_token = "iePyN3gAHpPtWIU4ynXZzh_lOQ5O5mbRNMopeZIfKs0"

def renovar_token(refresh_token):
    url = "https://api.rd.services/auth/token?token_by=refresh_token"
    payload = {
        "client_id": client_id,
        "client_secret": client_secret,
        "refresh_token": refresh_token
    }
    response = requests.post(url, json=payload)
    if response.status_code == 200:
        novo_token = response.json()
        print("üîÅ Token renovado com sucesso.")
        return novo_token["access_token"], novo_token["refresh_token"]
    else:
        print("‚ùå Falha ao renovar token.")
        print(response.status_code, response.text)
        return None, None

def buscar_negociacoes(token):
    global access_token, refresh_token
    headers = {"Authorization": f"Bearer {token}"}
    data_inicio = (datetime.now(timezone.utc) - timedelta(days=180)).strftime("%Y-%m-%dT%H:%M:%SZ")
    todas_negociacoes = []
    pagina = 1
    tentou_renovar = False

    while True:
        url = f"https://crm.rdstation.com/api/v1/deals?won=true&created_at_start={data_inicio}&page={pagina}&limit=100"
        response = requests.get(url, headers=headers)

        if response.status_code == 401:
            if tentou_renovar:
                print("‚ùå Token expirado mesmo ap√≥s renovar. Encerrando.")
                break
            print("‚ö†Ô∏è Token expirado. Tentando renovar...")
            novo_access_token, novo_refresh_token = renovar_token(refresh_token)
            if novo_access_token:
                access_token = novo_access_token
                refresh_token = novo_refresh_token
                headers = {"Authorization": f"Bearer {access_token}"}  # ‚úÖ atualiza headers corretamente
                tentou_renovar = True
                continue
            else:
                print("‚ùå Falha na renova√ß√£o. Encerrando.")
                break

        if response.status_code != 200:
            print(f"‚ùå Erro na p√°gina {pagina}: {response.status_code}")
            print(response.text)
            break

        dados = response.json()
        negociacoes = dados.get("deals", [])
        if not negociacoes:
            break

        todas_negociacoes.extend(negociacoes)
        print(f"‚úÖ P√°gina {pagina} processada. Total at√© agora: {len(todas_negociacoes)}")
        pagina += 1

    return todas_negociacoes

# === EXECU√á√ÉO PRINCIPAL ===
negociacoes = buscar_negociacoes(access_token)

if negociacoes:
    df = pd.json_normalize(negociacoes)
    df.to_csv("negociacoes_ganhas_6_meses.csv", index=False)
    print("üìÅ Arquivo salvo com sucesso: negociacoes_ganhas_6_meses.csv")
else:
    print("‚ö†Ô∏è Nenhuma negocia√ß√£o encontrada.")
